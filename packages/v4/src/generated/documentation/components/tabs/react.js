import React from 'react';
import { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';
import { UsersIcon,  BoxIcon, DatabaseIcon, ServerIcon, LaptopIcon, ProjectDiagramIcon } from '@patternfly/react-icons';

export const DocumentationComponentsTabsReactDocs = {
  "slug": "/documentation/components/tabs/react",
  "source": "react",
  "propComponents": [
    "Tabs",
    "Tab",
    "TabContent",
    "TabTitleText",
    "TabTitleIcon"
  ],
  "sourceLink": "https://github.com/patternfly/patternfly-react/blob/master/packages/react-core/src/components/Tabs/examples/Tabs.md",
  "section": "components",
  "id": "Tabs",
  "title": "Tabs",
  "toc": [
    "Examples"
  ],
  "cssPrefix": "pf-c-tabs"
};
DocumentationComponentsTabsReactDocs.liveContext = {
  UsersIcon,
  BoxIcon,
  DatabaseIcon,
  ServerIcon,
  LaptopIcon,
  ProjectDiagramIcon
};
DocumentationComponentsTabsReactDocs.Component = () => (
  <React.Fragment>
    <p {...{"className":"ws-p"}}>
      {`Most tab variations are available as open (default) or box style tabs. Select the 'isBox' checkbox to preview an example with box styled tabs.`}
    </p>
    <AutoLinkHeader {...{"size":"h2","className":"ws-title ws-h2"}}>
      {`Examples`}
    </AutoLinkHeader>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText, Checkbox } from '@patternfly/react-core';\n\nclass SimpleTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0,\n      isBox: false\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n\n    this.toggleBox = checked => {\n      this.setState({\n        isBox: checked\n      });\n    };\n  }\n\n  render() {\n    const {activeTabKey, isBox} = this.state;\n    return (\n      <div>\n        <Tabs activeKey={activeTabKey} onSelect={this.handleTabClick} isBox={isBox}>\n          <Tab eventKey={0} title={<TabTitleText>Users</TabTitleText>}>\n            Users\n          </Tab>\n          <Tab eventKey={1} title={<TabTitleText>Containers</TabTitleText>}>\n            Containers\n          </Tab>\n          <Tab eventKey={2} title={<TabTitleText>Database</TabTitleText>}>\n            Database\n          </Tab>\n          <Tab eventKey={3} title={<TabTitleText>Server</TabTitleText>}>\n            Server\n          </Tab>\n          <Tab eventKey={4} title={<TabTitleText>System</TabTitleText>}>\n            System\n          </Tab>\n          <Tab eventKey={6} title={<TabTitleText>Network</TabTitleText>}>\n            Network\n          </Tab>\n        </Tabs>\n        <div style={{marginTop: \"20px\"}}>\n          <Checkbox\n              label=\"isBox\"\n              isChecked={isBox}\n              onChange={this.toggleBox}\n              aria-label=\"show box variation checkbox\"\n              id=\"toggle-box\"\n              name=\"toggle-box\"\n            />\n        </div>\n      </div>\n    );\n  }\n}","title":"Default","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText, Checkbox } from '@patternfly/react-core';\n\nclass ScrollButtonsPrimaryTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0,\n      isBox: false\n    };\n\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n\n    this.toggleBox = checked => {\n      this.setState({\n        isBox: checked\n      });\n    };\n  }\n\n  render() {\n    const {activeTabKey, isBox} = this.state;\n    return (\n      <div>\n        <Tabs activeKey={activeTabKey} onSelect={this.handleTabClick} isBox={isBox}>\n          <Tab eventKey={0} title={<TabTitleText>Users</TabTitleText>}>\n            Users\n          </Tab>\n          <Tab eventKey={1} title={<TabTitleText>Containers</TabTitleText>}>\n            Containers\n          </Tab>\n          <Tab eventKey={2} title={<TabTitleText>Database</TabTitleText>}>\n            Database\n          </Tab>\n          <Tab eventKey={3} title={<TabTitleText>Server</TabTitleText>}>\n            Server\n          </Tab>\n          <Tab eventKey={4} title={<TabTitleText>System</TabTitleText>}>\n            System\n          </Tab>\n          <Tab eventKey={6} title={<TabTitleText>Network</TabTitleText>}>\n            Network\n          </Tab>\n          <Tab eventKey={7} title={<TabTitleText>Tab item 7</TabTitleText>}>\n            Tab 7 section\n          </Tab>\n          <Tab eventKey={8} title={<TabTitleText>Tab item 8</TabTitleText>}>\n            Tab 8 section\n          </Tab>\n          <Tab eventKey={9} title={<TabTitleText>Tab item 9</TabTitleText>}>\n            Tab 9 section\n          </Tab>\n          <Tab eventKey={10} title={<TabTitleText>Tab item 10</TabTitleText>}>\n            Tab 10 section\n          </Tab>\n          <Tab eventKey={11} title={<TabTitleText>Tab item 11</TabTitleText>}>\n            Tab 11 section\n          </Tab>\n        </Tabs>\n        <div style={{marginTop: \"20px\"}}>\n          <Checkbox\n              label=\"isBox\"\n              isChecked={isBox}\n              onChange={this.toggleBox}\n              aria-label=\"show box variation checkbox on overflow\"\n              id=\"toggle-box-overflow\"\n              name=\"toggle-box-overflow\"\n            />\n        </div>\n      </div>\n    );\n  }\n}","title":"Default overflow","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText, Checkbox } from '@patternfly/react-core';\n\nclass VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0,\n      isBox: false\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n\n    this.toggleBox = checked => {\n      this.setState({\n        isBox: checked\n      });\n    };\n  }\n\n  render() {\n    const {activeTabKey, isBox} = this.state;\n    return (\n      <div>\n        <Tabs activeKey={activeTabKey} onSelect={this.handleTabClick} isVertical isBox={isBox}>\n          <Tab eventKey={0} title={<TabTitleText>Users</TabTitleText>}>\n            Users\n          </Tab>\n          <Tab eventKey={1} title={<TabTitleText>Containers</TabTitleText>}>\n            Containers\n          </Tab>\n          <Tab eventKey={2} title={<TabTitleText>Database</TabTitleText>}>\n            Database\n          </Tab>\n          <Tab eventKey={3} title={<TabTitleText>Server</TabTitleText>}>\n            Server\n          </Tab>\n          <Tab eventKey={4} title={<TabTitleText>System</TabTitleText>}>\n            System\n          </Tab>\n          <Tab eventKey={6} title={<TabTitleText>Network</TabTitleText>}>\n            Network\n          </Tab>\n        </Tabs>\n        <div style={{marginTop: \"20px\"}}>\n          <Checkbox\n                label=\"isBox\"\n                isChecked={isBox}\n                onChange={this.toggleBox}\n                aria-label=\"show box variation checkbox with vertical\"\n                id=\"toggle-box-vertical\"\n                name=\"toggle-box-vertical\"\n              />\n        </div>\n      </div>\n    );\n  }\n}","title":"Vertical","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText, Checkbox } from '@patternfly/react-core';\n\nclass InsetTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0,\n      isBox: false\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n\n    this.toggleBox = checked => {\n      this.setState({\n        isBox: checked\n      });\n    };\n  }\n\n  render() {\n    const {activeTabKey, isBox} = this.state;\n    return (\n      <div>\n        <Tabs activeKey={activeTabKey} onSelect={this.handleTabClick} inset={{\n          default: 'insetNone',\n          md: 'insetSm',\n          xl: 'inset2xl',\n          '2xl': 'insetLg'\n        }}\n        isBox={isBox}>\n          <Tab eventKey={0} title={<TabTitleText>Users</TabTitleText>}>\n            Users\n          </Tab>\n          <Tab eventKey={1} title={<TabTitleText>Containers</TabTitleText>}>\n            Containers\n          </Tab>\n          <Tab eventKey={2} title={<TabTitleText>Database</TabTitleText>}>\n            Database\n          </Tab>\n          <Tab eventKey={3} title={<TabTitleText>Server</TabTitleText>}>\n            Server\n          </Tab>\n          <Tab eventKey={4} title={<TabTitleText>System</TabTitleText>}>\n            System\n          </Tab>\n          <Tab eventKey={6} title={<TabTitleText>Network</TabTitleText>}>\n            Network\n          </Tab>\n        </Tabs>\n        <div style={{marginTop: \"20px\"}}>\n          <Checkbox\n                label=\"isBox\"\n                isChecked={isBox}\n                onChange={this.toggleBox}\n                aria-label=\"show box variation checkbox with inset\"\n                id=\"toggle-box-inset\"\n                name=\"toggle-box-inset\"\n              />\n        </div>\n      </div>\n    );\n  }\n}","title":"Inset","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText, TabTitleIcon } from '@patternfly/react-core';\nimport { UsersIcon,  BoxIcon, DatabaseIcon, ServerIcon, LaptopIcon, ProjectDiagramIcon } from '@patternfly/react-icons';\n\nclass IconAndTextTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n        <Tab eventKey={0} title={<><TabTitleIcon><UsersIcon /></TabTitleIcon> <TabTitleText>Users</TabTitleText>  </>}>\n          Users\n        </Tab>\n        <Tab eventKey={1} title={<><TabTitleIcon><BoxIcon /></TabTitleIcon> <TabTitleText>Containers</TabTitleText>  </>}>\n          Containers\n        </Tab>\n        <Tab eventKey={2} title={<><TabTitleIcon><DatabaseIcon /></TabTitleIcon> <TabTitleText>Database</TabTitleText>  </>}>\n          Database\n        </Tab>\n        <Tab eventKey={3} title={<><TabTitleIcon><ServerIcon /></TabTitleIcon> <TabTitleText>Server</TabTitleText>  </>}>\n          Server\n        </Tab>\n        <Tab eventKey={4} title={<><TabTitleIcon><LaptopIcon /></TabTitleIcon> <TabTitleText>System</TabTitleText>  </>}>\n          System\n        </Tab>\n        <Tab eventKey={6} title={<><TabTitleIcon><ProjectDiagramIcon /></TabTitleIcon> <TabTitleText>Network</TabTitleText>  </>}>\n          Network\n        </Tab>\n      </Tabs>\n    );\n  }\n}","title":"Icons and text","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText, Checkbox } from '@patternfly/react-core';\n\nclass SecondaryTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey1: 0,\n      activeTabKey2: 10,\n      isBox: false\n    };\n    // Toggle currently active tab\n    this.handleTabClickFirst = (event, tabIndex) => {\n      this.setState({\n        activeTabKey1: tabIndex\n      });\n    };\n    // Toggle currently active secondary tab\n    this.handleTabClickSecond = (event, tabIndex) => {\n      this.setState({\n        activeTabKey2: tabIndex\n      });\n    };\n\n    this.toggleBox = checked => {\n      this.setState({\n        isBox: checked\n      });\n    };\n  }\n\n  render() {\n    const {activeTabKey1, activeTabKey2, isBox} = this.state;\n    return (\n      <div>\n      <Tabs activeKey={activeTabKey1} onSelect={this.handleTabClickFirst} isBox={isBox}>\n        <Tab eventKey={0} title={<TabTitleText>Users</TabTitleText>}>\n          <Tabs activeKey={activeTabKey2} isSecondary onSelect={this.handleTabClickSecond}>\n            <Tab eventKey={20} title={<TabTitleText>Secondary tab item 1</TabTitleText>} >\n              Secondary tab item 1 item section\n            </Tab>\n            <Tab eventKey={21} title={<TabTitleText>Secondary tab item 2</TabTitleText>}>>\n              Secondary tab item 2 section\n            </Tab>\n            <Tab eventKey={22} title={<TabTitleText>Secondary tab item 3</TabTitleText>}>>\n              Secondary tab item 3 section\n            </Tab>\n            <Tab eventKey={23} title={<TabTitleText>Secondary tab item 4</TabTitleText>}>>\n              Secondary tab item 4 section\n            </Tab>\n            <Tab eventKey={24} title={<TabTitleText>Secondary tab item 5</TabTitleText>}>>\n              Secondary tab item 5 section\n            </Tab>\n            <Tab eventKey={25} title={<TabTitleText>Secondary tab item 6</TabTitleText>}>>\n              Secondary tab item 6 section\n            </Tab>\n            <Tab eventKey={26} title={<TabTitleText>Secondary tab item 7</TabTitleText>}>>\n              Secondary tab item 7 section\n            </Tab>\n            <Tab eventKey={27} title={<TabTitleText>Secondary tab item 8</TabTitleText>}>>\n              Secondary tab item 8 section\n            </Tab>\n          </Tabs>\n        </Tab>\n        <Tab eventKey={1} title={<TabTitleText>Containers</TabTitleText>}>\n          Containers\n        </Tab>\n        <Tab eventKey={2} title={<TabTitleText>Database</TabTitleText>}>\n          Database\n        </Tab>\n        <Tab eventKey={3} title={<TabTitleText>Server</TabTitleText>}>\n          Server\n        </Tab>\n        <Tab eventKey={4} title={<TabTitleText>System</TabTitleText>}>\n          System\n        </Tab>\n        <Tab eventKey={6} title={<TabTitleText>Network</TabTitleText>}>\n          Network\n        </Tab>\n        <Tab eventKey={7} title={<TabTitleText>Tab item 7</TabTitleText>}>\n          Tab 7 section\n        </Tab>\n        <Tab eventKey={8} title={<TabTitleText>Tab item 8</TabTitleText>}>\n          Tab 8 section\n        </Tab>\n        <Tab eventKey={9} title={<TabTitleText>Tab item 9</TabTitleText>}>\n          Tab 9 section\n        </Tab>\n        <Tab eventKey={10} title={<TabTitleText>Tab item 10</TabTitleText>}>\n          Tab 10 section\n        </Tab>\n        <Tab eventKey={11} title={<TabTitleText>Tab item 11</TabTitleText>}>\n          Tab 11 section\n        </Tab>\n      </Tabs>\n      <div style={{marginTop: \"20px\"}}>\n        <Checkbox\n              label=\"isBox\"\n              isChecked={isBox}\n              onChange={this.toggleBox}\n              aria-label=\"show box variation checkbox with sub tabs\"\n              id=\"toggle-box-secondary\"\n              name=\"toggle-box-secondary\"\n            />\n        </div>\n      </div>\n    );\n  }\n}","title":"Tabs with sub tabs","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText, Checkbox } from '@patternfly/react-core';\n\nclass FilledTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0,\n      isBox: false\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n\n    this.toggleBox = checked => {\n      this.setState({\n        isBox: checked\n      });\n    };\n  }\n\n  render() {\n    const {activeTabKey, isBox} = this.state;\n    return (\n      <div>\n      <Tabs isFilled activeKey={activeTabKey} onSelect={this.handleTabClick} isBox={isBox}>\n        <Tab eventKey={0} title={<TabTitleText>Users</TabTitleText>}>\n          Users\n        </Tab>\n        <Tab eventKey={1} title={<TabTitleText>Containers</TabTitleText>}>\n          Containers\n        </Tab>\n        <Tab eventKey={2} title={<TabTitleText>Database</TabTitleText>}>\n          Database\n        </Tab>\n      </Tabs>\n       <div style={{marginTop: \"20px\"}}>\n        <Checkbox\n              label=\"isBox\"\n              isChecked={isBox}\n              onChange={this.toggleBox}\n              aria-label=\"show box variation checkbox with filled tabs\"\n              id=\"toggle-box-filled\"\n              name=\"toggle-box-filled\"\n            />\n        </div>\n      </div>\n    );\n  }\n}","title":"Filled","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText, TabTitleIcon, Checkbox } from '@patternfly/react-core';\nimport { UsersIcon,  BoxIcon, DatabaseIcon } from '@patternfly/react-icons';\n\nclass FilledTabsWithIcons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0,\n      isBox: false\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n\n    this.toggleBox = checked => {\n      this.setState({\n        isBox: checked\n      });\n    };\n  }\n\n  render() {\n    const {activeTabKey, isBox} = this.state;\n    return (\n      <div>\n      <Tabs isFilled activeKey={activeTabKey} onSelect={this.handleTabClick} isBox={isBox}>\n        <Tab eventKey={0} title={<><TabTitleIcon><UsersIcon /></TabTitleIcon> <TabTitleText>Users</TabTitleText>  </>}>\n          Users\n        </Tab>\n        <Tab eventKey={1} title={<><TabTitleIcon><BoxIcon /></TabTitleIcon> <TabTitleText>Containers</TabTitleText>  </>}>\n          Containers\n        </Tab>\n        <Tab eventKey={2} title={<><TabTitleIcon><DatabaseIcon /></TabTitleIcon> <TabTitleText>Database</TabTitleText>  </>}>\n          Database\n        </Tab>\n      </Tabs>\n      <div style={{marginTop: \"20px\"}}>\n        <Checkbox\n              label=\"isBox\"\n              isChecked={isBox}\n              onChange={this.toggleBox}\n              aria-label=\"show box variation checkbox with filled icon tabs\"\n              id=\"toggle-box-filled-icon\"\n              name=\"toggle-box-filled-icon\"\n            />\n        </div>\n      </div>\n    );\n  }\n}","title":"Filled with icons","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabsComponent, TabTitleText } from '@patternfly/react-core';\n\nclass TabsNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0\n    };\n\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs\n        activeKey={this.state.activeTabKey}\n        onSelect={this.handleTabClick}\n        aria-label=\"Local\"\n        component={TabsComponent.nav}\n      >\n       <Tab eventKey={0} title={<TabTitleText>Users</TabTitleText>} href=\"#\">\n          Users\n        </Tab>\n        <Tab eventKey={1} title={<TabTitleText>Containers</TabTitleText>} href=\"#\">\n          Containers\n        </Tab>\n        <Tab eventKey={2} title={<TabTitleText>Database</TabTitleText>} href=\"#\">\n          Database\n        </Tab>\n        <Tab eventKey={3} title={<TabTitleText>Server</TabTitleText>} href=\"#\">\n          Server\n        </Tab>\n        <Tab eventKey={4} title={<TabTitleText>System</TabTitleText>} href=\"#\">\n          System\n        </Tab>\n        <Tab eventKey={6} title={<TabTitleText>Network</TabTitleText>} href=\"#\">\n          Network\n        </Tab>\n      </Tabs>\n    );\n  }\n}","title":"Using the nav element","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabsComponent, TabTitleText } from '@patternfly/react-core';\n\nclass SecondaryTabsNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey1: 0,\n      activeTabKey2: 10\n    };\n\n    // Toggle currently active tab\n    this.handleTabClickFirst = (event, tabIndex) => {\n      this.setState({\n        activeTabKey1: tabIndex\n      });\n    };\n\n    // Toggle currently active secondary tab\n    this.handleTabClickSecond = (event, tabIndex) => {\n      this.setState({\n        activeTabKey2: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs\n        activeKey={this.state.activeTabKey1}\n        onSelect={this.handleTabClickFirst}\n        aria-label=\"Local\"\n        component={TabsComponent.nav}\n      >\n        <Tab eventKey={0} title={<TabTitleText>Users</TabTitleText>} href=\"#\">\n          <Tabs\n            activeKey={this.state.activeTabKey2}\n            isSecondary\n            onSelect={this.handleTabClickSecond}\n            aria-label=\"Local secondary\"\n            component={TabsComponent.nav}\n          >\n            <Tab eventKey={20} title={<TabTitleText>Secondary tab item 1</TabTitleText>} href=\"#\">\n              Secondary tab item 1 item section\n            </Tab>\n            <Tab eventKey={21} title={<TabTitleText>Secondary tab item 2</TabTitleText>} href=\"#\">\n              Secondary tab item 2 section\n            </Tab>\n            <Tab eventKey={22} title={<TabTitleText>Secondary tab item 3</TabTitleText>} href=\"#\">\n              Secondary tab item 3 section\n            </Tab>\n            <Tab eventKey={23} title={<TabTitleText>Secondary tab item 4</TabTitleText>}href=\"#\" >\n              Secondary tab item 4 section\n            </Tab>\n            <Tab eventKey={24} title={<TabTitleText>Secondary tab item 5</TabTitleText>} href=\"#\">\n              Secondary tab item 5 section\n            </Tab>\n            <Tab eventKey={25} title={<TabTitleText>Secondary tab item 6</TabTitleText>} href=\"#\">\n              Secondary tab item 6 section\n            </Tab>\n          </Tabs>\n        </Tab>\n        <Tab eventKey={1} title={<TabTitleText>Containers</TabTitleText>} href=\"#\">\n          Containers\n        </Tab>\n        <Tab eventKey={2} title={<TabTitleText>Database</TabTitleText>} href=\"#\">\n          Database\n        </Tab>\n        <Tab eventKey={3} title={<TabTitleText>Server</TabTitleText>} href=\"#\">\n          Server\n        </Tab>\n        <Tab eventKey={4} title={<TabTitleText>System</TabTitleText>} href=\"#\">\n          System\n        </Tab>\n        <Tab eventKey={6} title={<TabTitleText>Network</TabTitleText>} href=\"#\">\n          Network\n        </Tab>\n      </Tabs>\n    );\n  }\n}","title":"Sub nav using the nav element","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText, TabContent } from '@patternfly/react-core';\n\nclass SeparateTabContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeKey: 0\n    };\n\n    this.contentRef1 = React.createRef();\n    this.contentRef2 = React.createRef();\n    this.contentRef3 = React.createRef();\n\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n          <Tab eventKey={0} title={<TabTitleText>Tab item 1</TabTitleText>} tabContentId=\"refTab1Section\" tabContentRef={this.contentRef1} />\n          <Tab eventKey={1} title={<TabTitleText>Tab item 2</TabTitleText>}tabContentId=\"refTab2Section\" tabContentRef={this.contentRef2} />\n          <Tab eventKey={2} title={<TabTitleText>Tab item 3</TabTitleText>}  tabContentId=\"refTab3Section\" tabContentRef={this.contentRef3} />\n        </Tabs>\n        <div>\n          <TabContent eventKey={0} id=\"refTab1Section\" ref={this.contentRef1} aria-label=\"Tab item 1\">\n            Tab 1 section\n          </TabContent>\n          <TabContent eventKey={1} id=\"refTab2Section\" ref={this.contentRef2} aria-label=\"Tab item 2\" hidden>\n            Tab 2 section\n          </TabContent>\n          <TabContent eventKey={2} id=\"refTab3Section\" ref={this.contentRef3} aria-label=\"Tab item 3\" hidden>\n            Tab 3 section\n          </TabContent>\n        </div>\n      </React.Fragment>\n    );\n  }\n}","title":"Separate content","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText } from '@patternfly/react-core';\n\nclass MountingSimpleTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs mountOnEnter activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n        <Tab eventKey={0} title={<TabTitleText>Tab item 1</TabTitleText>} >\n          Tab 1 section\n        </Tab>\n        <Tab eventKey={1} title={<TabTitleText>Tab item 2</TabTitleText>} >\n          Tab 2 section\n        </Tab>\n        <Tab eventKey={2} title={<TabTitleText>Tab item 3</TabTitleText>} >\n          Tab 3 section\n        </Tab>\n      </Tabs>\n    );\n  }\n}","title":"Children mounting on click","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabTitleText } from '@patternfly/react-core';\n\nclass UnmountingSimpleTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs unmountOnExit activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n        <Tab eventKey={0} title={<TabTitleText>Tab item 1</TabTitleText>} >\n          Tab 1 section\n        </Tab>\n        <Tab eventKey={1} title={<TabTitleText>Tab item 2</TabTitleText>} >\n          Tab 2 section\n        </Tab>\n        <Tab eventKey={2} title={<TabTitleText>Tab item 3</TabTitleText>} >\n          Tab 3 section\n        </Tab>\n      </Tabs>\n    );\n  }\n}","title":"Unmounting invisible children","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsTabsReactDocs} {...{"code":"import React from 'react';\nimport { Tabs, Tab, TabsVariant, TabContent, Button, Divider } from '@patternfly/react-core';\n\nclass ToggledSeparateContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeKey: 0,\n      isTab2Hidden: false\n    };\n\n    this.contentRef1 = React.createRef();\n    this.contentRef2 = React.createRef();\n    this.contentRef3 = React.createRef();\n\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    const { activeKey, isTab2Hidden } = this.state;\n    return (\n      <React.Fragment>\n        <Button onClick={() => this.setState({ isTab2Hidden: !isTab2Hidden })}>\n          {isTab2Hidden ? 'Show' : 'Hide'} tab 2\n        </Button>\n        <Divider style={{ paddingTop: '1rem', paddingBottom: '1rem' }} />\n        <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n          <Tab eventKey={0} title=\"Tab item 1\" tabContentId=\"refTab1Section\" tabContentRef={this.contentRef1} />\n          {!isTab2Hidden && (\n            <Tab eventKey={1} title=\"Tab item 2\" tabContentId=\"refTab2Section\" tabContentRef={this.contentRef2} />\n          )}\n          <Tab eventKey={2} title=\"Tab item 3\" tabContentId=\"refTab3Section\" tabContentRef={this.contentRef3} />\n        </Tabs>\n        <div>\n          <TabContent eventKey={0} id=\"refTab1Section\" ref={this.contentRef1} aria-label=\"Tab item 1\">\n            Tab 1 section\n          </TabContent>\n          {!isTab2Hidden && (\n            <TabContent eventKey={1} id=\"refTab2Section\" ref={this.contentRef2} aria-label=\"Tab item 2\" hidden>\n              Tab 2 section\n            </TabContent>\n          )}\n          <TabContent eventKey={2} id=\"refTab3Section\" ref={this.contentRef3} aria-label=\"Tab item 3\" hidden>\n            Tab 3 section\n          </TabContent>\n        </div>\n      </React.Fragment>\n    );\n  }\n}","title":"Toggled separate content","lang":"js"}}>
    </Example>
  </React.Fragment>
);
DocumentationComponentsTabsReactDocs.Component.displayName = 'DocumentationComponentsTabsReactDocs';
