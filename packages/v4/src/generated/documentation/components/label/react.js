import React from 'react';
import { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';
import { InfoCircleIcon } from '@patternfly/react-icons';

export const DocumentationComponentsLabelReactDocs = {
  "slug": "/documentation/components/label/react",
  "source": "react",
  "propComponents": [
    "Label"
  ],
  "sourceLink": "https://github.com/patternfly/patternfly-react/blob/master/packages/react-core/src/components/Label/examples/Label.md",
  "section": "components",
  "id": "Label",
  "title": "Label",
  "toc": [
    "Examples"
  ],
  "cssPrefix": "pf-c-label"
};
DocumentationComponentsLabelReactDocs.liveContext = {
  InfoCircleIcon
};
DocumentationComponentsLabelReactDocs.Component = () => (
  <React.Fragment>
    <AutoLinkHeader {...{"size":"h2","className":"ws-title ws-h2"}}>
      {`Examples`}
    </AutoLinkHeader>
    <Example {...DocumentationComponentsLabelReactDocs} {...{"code":"import React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\n\nFilledLabels = () => (\n  <React.Fragment>\n    <Label>Grey</Label> <Label icon={<InfoCircleIcon />}>Grey icon</Label>{' '}\n    <Label onClose={Function.prototype}>Grey removeable</Label>{' '}\n    <Label icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Grey icon removeable\n    </Label>{' '}\n    <Label href=\"#filled\">Grey link</Label>{' '}\n    <Label href=\"#filled\" onClose={Function.prototype}>\n      Grey link removeable\n    </Label>\n    <br />\n    <br />\n    <Label color=\"blue\">Blue</Label> <Label color=\"blue\" icon={<InfoCircleIcon />}>\n      Blue icon\n    </Label> <Label color=\"blue\" onClose={Function.prototype}>\n      Blue removeable\n    </Label> <Label color=\"blue\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Blue icon removeable\n    </Label> <Label color=\"blue\" href=\"#filled\">\n      Blue link\n    </Label> <Label color=\"blue\" href=\"#filled\" onClose={Function.prototype}>\n      Blue link removeable\n    </Label>\n    <br />\n    <br />\n    <Label color=\"green\">Green</Label>{' '}\n    <Label color=\"green\" icon={<InfoCircleIcon />}>\n      Green icon\n    </Label>{' '}\n    <Label color=\"green\" onClose={Function.prototype}>\n      Green removeable\n    </Label>{' '}\n    <Label color=\"green\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Green icon removeable\n    </Label>{' '}\n    <Label color=\"green\" href=\"#filled\">\n      Green link\n    </Label>{' '}\n    <Label color=\"green\" href=\"#filled\" onClose={Function.prototype}>\n      Green link removeable\n    </Label>\n    <br />\n    <br />\n    <Label color=\"orange\">Orange</Label> <Label color=\"orange\" icon={<InfoCircleIcon />}>\n      Orange icon\n    </Label> <Label color=\"orange\" onClose={Function.prototype}>\n      Orange removeable\n    </Label> <Label color=\"orange\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Orange icon removeable\n    </Label> <Label color=\"orange\" href=\"#filled\">\n      Orange link\n    </Label> <Label color=\"orange\" href=\"#filled\" onClose={Function.prototype}>\n      Orange link removeable\n    </Label>\n    <br />\n    <br />\n    <Label color=\"red\">Red</Label>{' '}\n    <Label color=\"red\" icon={<InfoCircleIcon />}>\n      Red icon\n    </Label>{' '}\n    <Label color=\"red\" onClose={Function.prototype}>\n      Red removeable\n    </Label>{' '}\n    <Label color=\"red\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Red icon removeable\n    </Label>{' '}\n    <Label color=\"red\" href=\"#filled\">\n      Red link\n    </Label>{' '}\n    <Label color=\"red\" href=\"#filled\" onClose={Function.prototype}>\n      Red link removeable\n    </Label>\n    <br />\n    <br />\n    <Label color=\"purple\">Purple</Label> <Label color=\"purple\" icon={<InfoCircleIcon />}>\n      Purple icon\n    </Label> <Label color=\"purple\" onClose={Function.prototype}>\n      Purple removeable\n    </Label> <Label color=\"purple\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Purple icon removeable\n    </Label> <Label color=\"purple\" href=\"#filled\">\n      Purple link\n    </Label> <Label color=\"purple\" href=\"#filled\" onClose={Function.prototype}>\n      Purple link removeable\n    </Label>\n    <br />\n    <br />\n    <Label color=\"cyan\">Cyan</Label>{' '}\n    <Label color=\"cyan\" icon={<InfoCircleIcon />}>\n      Cyan icon\n    </Label>{' '}\n    <Label color=\"cyan\" onClose={Function.prototype}>\n      Cyan removeable\n    </Label>{' '}\n    <Label color=\"cyan\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Cyan icon removeable\n    </Label>{' '}\n    <Label color=\"cyan\" href=\"#filled\">\n      Cyan link\n    </Label>{' '}\n    <Label color=\"cyan\" href=\"#filled\" onClose={Function.prototype}>\n      Cyan link removeable\n    </Label>\n  </React.Fragment>\n);","title":"Filled","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsLabelReactDocs} {...{"code":"import React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\n\nOutlinedLabels = () => (\n  <React.Fragment>\n    <Label variant=\"outline\">Grey</Label>{' '}\n    <Label variant=\"outline\" icon={<InfoCircleIcon />}>\n      Grey icon\n    </Label>{' '}\n    <Label variant=\"outline\" onClose={Function.prototype}>\n      Grey removeable\n    </Label>{' '}\n    <Label variant=\"outline\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Grey icon removeable\n    </Label>{' '}\n    <Label variant=\"outline\" href=\"#outline\">\n      Grey link\n    </Label>{' '}\n    <Label variant=\"outline\" href=\"#outline\" onClose={Function.prototype}>\n      Grey link removeable\n    </Label>\n    <br />\n    <br />\n    <Label variant=\"outline\" color=\"blue\">\n      Blue\n    </Label> <Label variant=\"outline\" color=\"blue\" icon={<InfoCircleIcon />}>\n      Blue icon\n    </Label> <Label variant=\"outline\" color=\"blue\" onClose={Function.prototype}>\n      Blue removeable\n    </Label> <Label variant=\"outline\" color=\"blue\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Blue icon removeable\n    </Label> <Label variant=\"outline\" color=\"blue\" href=\"#outline\">\n      Blue link\n    </Label> <Label variant=\"outline\" color=\"blue\" href=\"#outline\" onClose={Function.prototype}>\n      Blue link removeable\n    </Label>\n    <br />\n    <br />\n    <Label variant=\"outline\" color=\"green\">\n      Green\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"green\" icon={<InfoCircleIcon />}>\n      Green icon\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"green\" onClose={Function.prototype}>\n      Green removeable\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"green\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Green icon removeable\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"green\" href=\"#outline\">\n      Green link\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"green\" href=\"#outline\" onClose={Function.prototype}>\n      Green link removeable\n    </Label>\n    <br />\n    <br />\n    <Label variant=\"outline\" color=\"orange\">\n      Orange\n    </Label> <Label variant=\"outline\" color=\"orange\" icon={<InfoCircleIcon />}>\n      Orange icon\n    </Label> <Label variant=\"outline\" color=\"orange\" onClose={Function.prototype}>\n      Orange removeable\n    </Label> <Label variant=\"outline\" color=\"orange\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Orange icon removeable\n    </Label> <Label variant=\"outline\" color=\"orange\" href=\"#outline\">\n      Orange link\n    </Label> <Label variant=\"outline\" color=\"orange\" href=\"#outline\" onClose={Function.prototype}>\n      Orange link removeable\n    </Label>\n    <br />\n    <br />\n    <Label variant=\"outline\" color=\"red\">\n      Red\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"red\" icon={<InfoCircleIcon />}>\n      Red icon\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"red\" onClose={Function.prototype}>\n      Red removeable\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"red\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Red icon removeable\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"red\" href=\"#outline\">\n      Red link\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"red\" href=\"#outline\" onClose={Function.prototype}>\n      Red link removeable\n    </Label>\n    <br />\n    <br />\n    <Label variant=\"outline\" color=\"purple\">\n      Purple\n    </Label> <Label variant=\"outline\" color=\"purple\" icon={<InfoCircleIcon />}>\n      Purple icon\n    </Label> <Label variant=\"outline\" color=\"purple\" onClose={Function.prototype}>\n      Purple removeable\n    </Label> <Label variant=\"outline\" color=\"purple\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Purple icon removeable\n    </Label> <Label variant=\"outline\" color=\"purple\" href=\"#outline\">\n      Purple link\n    </Label> <Label variant=\"outline\" color=\"purple\" href=\"#outline\" onClose={Function.prototype}>\n      Purple link removeable\n    </Label>\n    <br />\n    <br />\n    <Label variant=\"outline\" color=\"cyan\">\n      Cyan\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"cyan\" icon={<InfoCircleIcon />}>\n      Cyan icon\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"cyan\" onClose={Function.prototype}>\n      Cyan removeable\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"cyan\" icon={<InfoCircleIcon />} onClose={Function.prototype}>\n      Cyan icon removeable\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"cyan\" href=\"#outline\">\n      Cyan link\n    </Label>{' '}\n    <Label variant=\"outline\" color=\"cyan\" href=\"#outline\" onClose={Function.prototype}>\n      Cyan link removeable\n    </Label>\n  </React.Fragment>\n);","title":"Outline","lang":"js"}}>
    </Example>
  </React.Fragment>
);
DocumentationComponentsLabelReactDocs.Component.displayName = 'DocumentationComponentsLabelReactDocs';
