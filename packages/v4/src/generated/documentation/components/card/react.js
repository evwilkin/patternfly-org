import React from 'react';
import { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';
import pfLogo from '../../../../../../../node_modules/@patternfly/react-core/src/components/Card/examples/./pfLogo.svg'; 

export const DocumentationComponentsCardReactDocs = {
  "slug": "/documentation/components/card/react",
  "source": "react",
  "propComponents": [
    "Card",
    "CardHeaderMain",
    "CardTitle",
    "CardBody",
    "CardFooter"
  ],
  "sourceLink": "https://github.com/patternfly/patternfly-react/blob/master/packages/react-core/src/components/Card/examples/Card.md",
  "section": "components",
  "id": "Card",
  "title": "Card",
  "toc": [
    "Examples"
  ],
  "cssPrefix": "pf-c-card"
};
DocumentationComponentsCardReactDocs.liveContext = {
  pfLogo
};
DocumentationComponentsCardReactDocs.Component = () => (
  <React.Fragment>
    <AutoLinkHeader {...{"size":"h2","className":"ws-title ws-h2"}}>
      {`Examples`}
    </AutoLinkHeader>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\n\nSimpleCard = () => (\n  <Card>\n    <CardTitle>Header</CardTitle>\n    <CardBody>Body</CardBody>\n    <CardFooter>Footer</CardFooter>\n  </Card>\n);","title":"Basic","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Brand, Card, CardHeader, CardHeaderMain, CardActions, CardTitle, CardBody, CardFooter, Dropdown, DropdownToggle, DropdownItem, DropdownSeparator, DropdownPosition, DropdownDirection, KebabToggle } from '@patternfly/react-core'; \nimport pfLogo from './pfLogo.svg'; \n\nclass KebabDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      check1: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n    this.onClick = (checked, event) => {\n      const target = event.target; \n      const value = target.type === 'checkbox' ? target.checked : target.value; \n      const name = target.name; \n      this.setState({ [name]: value }); \n    }; \n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Card>\n        <CardHeader>\n          <CardHeaderMain>\n            <Brand src={pfLogo} alt=\"PatternFly logo\" style={{ height: '50px' }}/>\n          </CardHeaderMain>\n          <CardActions>\n            <Dropdown\n              onSelect={this.onSelect}\n              toggle={<KebabToggle onToggle={this.onToggle} />}\n              isOpen={isOpen}\n              isPlain\n              dropdownItems={dropdownItems}\n              position={'right'}\n            />\n            <input\n              type=\"checkbox\" \n              isChecked={this.state.check1}\n              onChange={this.onClick}\n              aria-label=\"card checkbox example\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        </CardHeader>\n        <CardTitle>Header</CardTitle>\n        <CardBody>Body</CardBody>\n        <CardFooter>Footer</CardFooter>\n      </Card>\n    );\n  }\n}","title":"With image and actions","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardHeader, CardActions, CardTitle, CardBody, CardFooter, Dropdown, DropdownToggle, DropdownItem, DropdownSeparator, DropdownPosition, DropdownDirection, KebabToggle } from '@patternfly/react-core'; \n\nclass KebabDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      check1: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n    this.onClick = (checked, event) => {\n      const target = event.target; \n      const value = target.type === 'checkbox' ? target.checked : target.value; \n      const name = target.name; \n      this.setState({ [name]: value }); \n    }; \n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Card>\n        <CardHeader>\n          <CardActions>\n            <Dropdown\n              onSelect={this.onSelect}\n              toggle={<KebabToggle onToggle={this.onToggle} />}\n              isOpen={isOpen}\n              isPlain\n              dropdownItems={dropdownItems}\n              position={'right'}\n            />\n            <input\n              type=\"checkbox\" \n              isChecked={this.state.check1}\n              onChange={this.onClick}\n              aria-label=\"card checkbox example\"\n              id=\"check-2\"\n              name=\"check2\"\n            />\n          </CardActions>\n        <CardTitle>This is a really really really really really really really really really really long header</CardTitle>\n        </CardHeader>\n        <CardBody>Body</CardBody>\n        <CardFooter>Footer</CardFooter>\n      </Card>\n    );\n  }\n}","title":"Card header in card head","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownItem, DropdownSeparator, DropdownPosition, DropdownDirection, KebabToggle, Card, CardHeader, CardActions, CardTitle, CardBody } from '@patternfly/react-core'; \n\nclass KebabDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      check1: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n    this.onClick = (checked, event) => {\n      const target = event.target; \n      const value = target.type === 'checkbox' ? target.checked : target.value; \n      const name = target.name; \n      this.setState({ [name]: value }); \n    }; \n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Card>\n        <CardHeader>\n          <CardActions>\n            <Dropdown\n              onSelect={this.onSelect}\n              toggle={<KebabToggle onToggle={this.onToggle} />}\n              isOpen={isOpen}\n              isPlain\n              dropdownItems={dropdownItems}\n              position={'right'}\n            />\n            <input\n              type=\"checkbox\" \n              isChecked={this.state.check1}\n              onChange={this.onClick}\n              aria-label=\"card checkbox example\"\n              id=\"check-3\"\n              name=\"check3\"\n            />\n          </CardActions>\n        </CardHeader>\n        <CardBody>This is the card body, there is only actions in the card head.</CardBody>\n      </Card>\n    );\n  }\n}","title":"Only actions in card head (no header/footer)","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Brand, Card, CardBody, CardFooter, CardHeader, CardHeaderMain, CardTitle } from '@patternfly/react-core';\n\nImageCard = () => (\n  <Card>\n    <CardHeader>\n      <CardHeaderMain>\n        <Brand src={pfLogo} alt=\"PatternFly logo\" style={{ height: '50px' }}/>\n      </CardHeaderMain>\n    </CardHeader> \n    <CardTitle>Header</CardTitle>\n    <CardBody>Body</CardBody>\n    <CardFooter>Footer</CardFooter>\n  </Card>\n);","title":"Only image in the card head","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\n\nNoFooterCard = () => (\n  <Card>\n    <CardTitle>Header</CardTitle>\n    <CardBody>This card has no footer</CardBody>\n  </Card>\n);","title":"With no footer","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\n\nNoHeaderCard = () => (\n  <Card>\n    <CardBody>This card has no header</CardBody>\n    <CardFooter>Footer</CardFooter>\n  </Card>\n);","title":"With no header","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\n\nContentOnlyCard = () => (\n  <Card>\n    <CardBody>Body</CardBody>\n  </Card>\n);","title":"With only a content section","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\n\nMultipleBodyCard = () => (\n  <Card>\n    <CardTitle>Header</CardTitle>\n    <CardBody>Body</CardBody>\n    <CardBody>Body</CardBody>\n    <CardBody>Body</CardBody>\n    <CardFooter>Footer</CardFooter>\n  </Card>\n);","title":"With multiple body sections","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\n\nNoFillBodyCard = () => (\n  <Card style={{ minHeight: '30em' }}>\n    <CardTitle>Header</CardTitle>\n    <CardBody isFilled={false}>Body pf-m-no-fill</CardBody>\n    <CardBody isFilled={false}>Body pf-m-no-fill</CardBody>\n    <CardBody>Body</CardBody>\n    <CardFooter>Footer</CardFooter>\n  </Card>\n);","title":"With only one body that fills","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\n\nHoverableCard = () => (\n  <Card isHoverable>\n    <CardTitle>Header</CardTitle>\n    <CardBody>Body</CardBody>\n    <CardFooter>Footer</CardFooter>\n  </Card>\n);","title":"Hover","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\n\nCompactCard = () => (\n  <Card isCompact>\n    <CardTitle>Header</CardTitle>\n    <CardBody>Body</CardBody>\n    <CardFooter>Footer</CardFooter>\n  </Card>\n);","title":"Compact","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardHeader, CardActions, CardTitle, CardBody, Dropdown, DropdownToggle, DropdownItem, DropdownSeparator, DropdownPosition, DropdownDirection, KebabToggle, } from '@patternfly/react-core'; \n\nclass SelectableCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n    this.onKeyDown = event => {\n        if (event.target !== event.currentTarget) {\n          return;\n        }\n        if ([13, 32].includes(event.keyCode)) {\n          const newSelected = event.currentTarget.id === this.state.selected ? null : event.currentTarget.id\n          this.setState({\n            selected: newSelected\n          })\n        }\n    }\n    this.onClick = event => {\n      const newSelected = event.currentTarget.id === this.state.selected ? null : event.currentTarget.id\n      this.setState({\n        selected: newSelected\n      })\n    }; \n    this.onToggle = (isOpen, event) => {\n      event.stopPropagation()\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      event.stopPropagation()\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n  render() {\n    const { selected, isOpen} = this.state\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <>\n      <Card id=\"first-card\" onKeyDown={this.onKeyDown} onClick={this.onClick} isSelectable isSelected={selected === 'first-card'}>\n        <CardHeader>\n          <CardActions>\n            <Dropdown\n              onSelect={this.onSelect}\n              toggle={<KebabToggle onToggle={this.onToggle} />}\n              isOpen={isOpen}\n              isPlain\n              dropdownItems={dropdownItems}\n              position={'right'}\n            />\n          </CardActions>\n        </CardHeader>\n        <CardTitle>First card</CardTitle>\n        <CardBody>This is a selectable card. Click me to select me. Click again to deselect me.</CardBody>\n      </Card>\n      <br/>\n      <Card id=\"second-card\" onKeyDown={this.onKeyDown} onClick={this.onClick} isSelectable isSelected={selected === 'second-card'}>\n        <CardTitle>Second card</CardTitle>\n        <CardBody>This is a selectable card. Click me to select me. Click again to deselect me.</CardBody>\n      </Card>\n      </>\n    );\n  }\n}","title":"Selectable and selected","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsCardReactDocs} {...{"code":"import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\n\nSimpleCard = () => (\n  <Card isFlat>\n    <CardTitle>Header</CardTitle>\n    <CardBody>Body</CardBody>\n    <CardFooter>Footer</CardFooter>\n  </Card>\n);","title":"Flat","lang":"js"}}>
    </Example>
  </React.Fragment>
);
DocumentationComponentsCardReactDocs.Component.displayName = 'DocumentationComponentsCardReactDocs';
