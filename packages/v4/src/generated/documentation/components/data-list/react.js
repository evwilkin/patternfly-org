import React from 'react';
import { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';
import {
Button,
DataList,
DataListItem,
DataListItemCells,
DataListItemRow,
DataListCell,
DataListCheck,
DataListAction,
DataListToggle,
DataListContent,
Dropdown,
DropdownPosition,
KebabToggle,
DropdownItem
} from '@patternfly/react-core';
import { CodeBranchIcon } from '@patternfly/react-icons';
import { css } from '@patternfly/react-styles';

export const DocumentationComponentsDataListReactDocs = {
  "slug": "/documentation/components/data-list/react",
  "source": "react",
  "propComponents": [
    "DataList",
    "DataListAction",
    "DataListCell",
    "DataListCheck",
    "DataListItem",
    "DataListItemCells",
    "DataListItemRow",
    "DataListToggle",
    "DataListContent"
  ],
  "sourceLink": "https://github.com/patternfly/patternfly-react/blob/master/packages/react-core/src/components/DataList/examples/DataList.md",
  "section": "components",
  "id": "Data list",
  "title": "Data list",
  "toc": [
    "Examples"
  ],
  "cssPrefix": "pf-c-data-list"
};
DocumentationComponentsDataListReactDocs.liveContext = {
  Button,
  DataList,
  DataListItem,
  DataListItemCells,
  DataListItemRow,
  DataListCell,
  DataListCheck,
  DataListAction,
  DataListToggle,
  DataListContent,
  Dropdown,
  DropdownPosition,
  KebabToggle,
  DropdownItem,
  CodeBranchIcon,
  css
};
DocumentationComponentsDataListReactDocs.Component = () => (
  <React.Fragment>
    <AutoLinkHeader {...{"size":"h2","className":"ws-title ws-h2"}}>
      {`Examples`}
    </AutoLinkHeader>
    <Example {...DocumentationComponentsDataListReactDocs} {...{"code":"import React from 'react';\nimport {\n  Button,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  DataListCheck,\n  DataListAction,\n  DataListToggle,\n  DataListContent,\n  Dropdown,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nSimpleDataList = () => (\n  <DataList aria-label=\"Simple data list example\">\n    <DataListItem aria-labelledby=\"simple-item1\">\n      <DataListItemRow>\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell key=\"primary content\">\n              <span id=\"simple-item1\">Primary content</span>\n            </DataListCell>,\n            <DataListCell key=\"secondary content\">Secondary content</DataListCell>\n          ]}\n        />\n      </DataListItemRow>\n    </DataListItem>\n    <DataListItem aria-labelledby=\"simple-item2\">\n      <DataListItemRow>\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell isFilled={false} key=\"secondary content fill\">\n              <span id=\"simple-item2\">Secondary content (pf-m-no-fill)</span>\n            </DataListCell>,\n            <DataListCell isFilled={false} alignRight key=\"secondary content align\">\n              Secondary content (pf-m-align-right pf-m-no-fill)\n            </DataListCell>\n          ]}\n        />\n      </DataListItemRow>\n    </DataListItem>\n  </DataList>\n);","title":"Basic","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDataListReactDocs} {...{"code":"import React from 'react';\nimport {\n  Button,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  DataListCheck,\n  DataListAction,\n  DataListToggle,\n  DataListContent,\n  Dropdown,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nSimpleDataList = () => (\n  <DataList aria-label=\"Compact data list example\" isCompact>\n    <DataListItem aria-labelledby=\"simple-item1\">\n      <DataListItemRow>\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell key=\"primary content\">\n              <span id=\"simple-item1\">Primary content</span>\n            </DataListCell>,\n            <DataListCell key=\"secondary content\">Secondary content</DataListCell>\n          ]}\n        />\n      </DataListItemRow>\n    </DataListItem>\n    <DataListItem aria-labelledby=\"simple-item2\">\n      <DataListItemRow>\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell isFilled={false} key=\"secondary content fill\">\n              <span id=\"simple-item2\">Secondary content (pf-m-no-fill)</span>\n            </DataListCell>,\n            <DataListCell isFilled={false} alignRight key=\"secondary content align\">\n              Secondary content (pf-m-align-right pf-m-no-fill)\n            </DataListCell>\n          ]}\n        />\n      </DataListItemRow>\n    </DataListItem>\n  </DataList>\n);","title":"Compact","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDataListReactDocs} {...{"code":"import React from 'react';\nimport {\n  Button,\n  DataList,\n  DataListActionModifiers,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  DataListCell,\n  DataListCheck,\n  DataListAction,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle\n} from '@patternfly/react-core';\n\nclass CheckboxActionDataList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen1: false, isOpen2: false, isOpen3: false };\n\n    this.onToggle1 = isOpen1 => {\n      this.setState({ isOpen1 });\n    };\n\n    this.onSelect1 = event => {\n      this.setState(prevState => ({\n        isOpen1: !prevState.isOpen1\n      }));\n    };\n\n    this.onToggle2 = isOpen2 => {\n      this.setState({ isOpen2 });\n    };\n\n    this.onSelect2 = event => {\n      this.setState(prevState => ({\n        isOpen2: !prevState.isOpen2\n      }));\n    };\n\n    this.onToggle3 = isOpen3 => {\n      this.setState({ isOpen3 });\n    };\n\n    this.onSelect3 = event => {\n      this.setState(prevState => ({\n        isOpen3: !prevState.isOpen3\n      }));\n    };\n  }\n\n  render() {\n    return (\n      <DataList aria-label=\"Checkbox and action data list example\">\n        <DataListItem aria-labelledby=\"check-action-item1\">\n          <DataListItemRow>\n            <DataListCheck aria-labelledby=\"check-action-item1\" name=\"check-action-check1\" />\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell key=\"primary content\">\n                  <span id=\"check-action-item1\">Primary content</span> Dolor sit amet, consectetur adipisicing elit, sed\n                  do eiusmod.\n                </DataListCell>,\n                <DataListCell key=\"secondary content 1\">\n                  Secondary content. Dolor sit amet, consectetur adipisicing elit, sed do eiusmod.\n                </DataListCell>,\n                <DataListCell key=\"secondary content 2\">\n                  <span>Tertiary content</span> Dolor sit amet, consectetur adipisicing elit, sed do eiusmod.\n                </DataListCell>,\n                <DataListCell key=\"more content 1\">\n                  <span>More content</span> Dolor sit amet, consectetur adipisicing elit, sed do eiusmod.\n                </DataListCell>,\n                <DataListCell key=\"more content 2\">\n                  <span>More content</span> Dolor sit amet, consectetur adipisicing elit, sed do eiusmod.\n                </DataListCell>\n              ]}\n            />\n            <DataListAction\n              aria-labelledby=\"check-action-item1 check-action-action1\"\n              id=\"check-action-action1\"\n              aria-label=\"Actions\"\n              isPlainButtonAction\n            >\n              <Dropdown\n                isPlain\n                position={DropdownPosition.right}\n                isOpen={this.state.isOpen1}\n                onSelect={this.onSelect1}\n                toggle={<KebabToggle onToggle={this.onToggle1} />}\n                dropdownItems={[\n                  <DropdownItem key=\"link\">Link</DropdownItem>,\n                  <DropdownItem key=\"action\" component=\"button\">\n                    Action\n                  </DropdownItem>,\n                  <DropdownItem key=\"disabled link\" isDisabled>\n                    Disabled Link\n                  </DropdownItem>\n                ]}\n              />\n            </DataListAction>\n          </DataListItemRow>\n        </DataListItem>\n        <DataListItem aria-labelledby=\"check-action-item2\">\n          <DataListItemRow>\n            <DataListCheck aria-labelledby=\"check-action-item2\" name=\"check-action-check2\" />\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell key=\"primary content\">\n                  <span id=\"check-action-item2\">Primary content - Lorem ipsum</span> dolor sit amet, consectetur\n                  adipisicing elit, sed do eiusmod.\n                </DataListCell>,\n                <DataListCell key=\"secondary content\">\n                  Secondary content. Dolor sit amet, consectetur adipisicing elit, sed do eiusmod.\n                </DataListCell>\n              ]}\n            />\n            <DataListAction\n              visibility={{ lg: 'hidden' }}\n              aria-labelledby=\"check-action-item2 check-action-action2\"\n              id=\"check-action-action2\"\n              aria-label=\"Actions\"\n              isPlainButtonAction\n            >\n              <Dropdown\n                isPlain\n                position={DropdownPosition.right}\n                isOpen={this.state.isOpen2}\n                onSelect={this.onSelect2}\n                toggle={<KebabToggle onToggle={this.onToggle2} />}\n                dropdownItems={[\n                  <DropdownItem key=\"pri-action2\" component=\"button\">\n                    Primary\n                  </DropdownItem>,\n                  <DropdownItem key=\"sec-action2\" component=\"button\">\n                    Secondary\n                  </DropdownItem>\n                ]}\n              />\n            </DataListAction>\n            <DataListAction\n              visibility={{ default: 'hidden', lg: 'visible' }}\n              aria-labelledby=\"check-action-item2 check-action-action2\"\n              id=\"check-action-action2\"\n              aria-label=\"Actions\"\n            >\n              <Button variant=\"primary\">Primary</Button>\n              <Button variant=\"secondary\">Secondary</Button>\n            </DataListAction>\n          </DataListItemRow>\n        </DataListItem>\n        <DataListItem aria-labelledby=\"check-action-item3\">\n          <DataListItemRow>\n            <DataListCheck aria-labelledby=\"check-action-item3\" name=\"check-action-check3\" />\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell key=\"primary content\">\n                  <span id=\"check-action-item3\">Primary content - Lorem ipsum</span> dolor sit amet, consectetur\n                  adipisicing elit, sed do eiusmod.\n                </DataListCell>,\n                <DataListCell key=\"secondary content\">\n                  Secondary content. Dolor sit amet, consectetur adipisicing elit, sed do eiusmod.\n                </DataListCell>\n              ]}\n            />\n            <DataListAction\n              visibility={{ xl: 'hidden' }}\n              aria-labelledby=\"check-action-item3 check-action-action3\"\n              id=\"check-action-action3\"\n              aria-label=\"Actions\"\n              isPlainButtonAction\n            >\n              <Dropdown\n                isPlain\n                position={DropdownPosition.right}\n                isOpen={this.state.isOpen3}\n                onSelect={this.onSelect3}\n                toggle={<KebabToggle onToggle={this.onToggle3} />}\n                dropdownItems={[\n                  <DropdownItem key=\"pri-action3\" component=\"button\">\n                    Primary\n                  </DropdownItem>,\n                  <DropdownItem key=\"sec1-action3\" component=\"button\">\n                    Secondary\n                  </DropdownItem>,\n                  <DropdownItem key=\"sec2-action3\" component=\"button\">\n                    Secondary\n                  </DropdownItem>,\n                  <DropdownItem key=\"sec3-action3\" component=\"button\">\n                    Secondary\n                  </DropdownItem>\n                ]}\n              />\n            </DataListAction>\n            <DataListAction\n              visibility={{ default: 'hidden', xl: 'visible' }}\n              aria-labelledby=\"check-action-item3 check-action-action3\"\n              id=\"check-action-action3\"\n              aria-label=\"Actions\"\n            >\n              <Button variant=\"primary\">Primary</Button>\n              <Button variant=\"secondary\">Secondary</Button>\n              <Button variant=\"secondary\">Secondary</Button>\n              <Button variant=\"secondary\">Secondary</Button>\n            </DataListAction>\n          </DataListItemRow>\n        </DataListItem>\n      </DataList>\n    );\n  }\n}","title":"Checkboxes, actions and additional cells","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDataListReactDocs} {...{"code":"import React from 'react';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  DataList,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListCheck,\n  DataListItemCells,\n  DataListAction\n} from '@patternfly/react-core';\n\nclass ActionsDataList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false, isDeleted: false };\n\n    this.onToggle = isOpen => {\n      this.setState({ isOpen });\n    };\n\n    this.onSelect = event => {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <DataList aria-label=\"single action data list example \">\n          {!this.state.isDeleted && (\n            <DataListItem aria-labelledby=\"single-action-item1\">\n              <DataListItemRow>\n                <DataListItemCells\n                  dataListCells={[\n                    <DataListCell key=\"primary content\">\n                      <span id=\"single-action-item1\">Single actionable Primary content</span>\n                    </DataListCell>,\n                    <DataListCell key=\"secondary content\">Single actionable Secondary content</DataListCell>\n                  ]}\n                />\n                <DataListAction\n                  aria-labelledby=\"single-action-item1 single-action-action1\"\n                  id=\"single-action-action1\"\n                  aria-label=\"Actions\"\n                >\n                  <Button\n                    onClick={() => {\n                      if (confirm('Are you sure?')) {\n                        this.setState({ isDeleted: true });\n                      }\n                    }}\n                    variant=\"primary\"\n                    key=\"delete-action\"\n                  >\n                    Delete\n                  </Button>\n                </DataListAction>\n              </DataListItemRow>\n            </DataListItem>\n          )}\n          <DataListItem aria-labelledby=\"multi-actions-item1\">\n            <DataListItemRow>\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key=\"primary content\">\n                    <span id=\"multi-actions-item1\">Multi actions Primary content</span>\n                  </DataListCell>,\n                  <DataListCell key=\"secondary content\">Multi actions Secondary content</DataListCell>\n                ]}\n              />\n              <DataListAction\n                aria-labelledby=\"multi-actions-item1 multi-actions-action1\"\n                id=\"multi-actions-action1\"\n                aria-label=\"Actions\"\n                isPlainButtonAction\n              >\n                <Dropdown\n                  isPlain\n                  position={DropdownPosition.right}\n                  isOpen={this.state.isOpen}\n                  onSelect={this.onSelect}\n                  toggle={<KebabToggle onToggle={this.onToggle} />}\n                  dropdownItems={[\n                    <DropdownItem key=\"link\">Link</DropdownItem>,\n                    <DropdownItem key=\"action\" component=\"button\">\n                      Action\n                    </DropdownItem>,\n                    <DropdownItem key=\"disabled link\" isDisabled>\n                      Disabled Link\n                    </DropdownItem>\n                  ]}\n                />\n              </DataListAction>\n            </DataListItemRow>\n          </DataListItem>\n        </DataList>\n      </React.Fragment>\n    );\n  }\n}","title":"Actions: single and multiple","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDataListReactDocs} {...{"code":"import React from 'react';\nimport {\n  Button,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListCheck,\n  DataListAction,\n  DataListToggle,\n  DataListContent,\n  DataListItemCells,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { CodeBranchIcon } from '@patternfly/react-icons';\n\nclass ExpandableDataList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: ['ex-toggle1', 'ex-toggle3'],\n      isOpen1: false,\n      isOpen2: false,\n      isOpen3: false\n    };\n\n    this.onToggle1 = isOpen1 => {\n      this.setState({ isOpen1 });\n    };\n\n    this.onToggle2 = isOpen2 => {\n      this.setState({ isOpen2 });\n    };\n\n    this.onToggle3 = isOpen3 => {\n      this.setState({ isOpen3 });\n    };\n\n    this.onSelect1 = event => {\n      this.setState(prevState => ({\n        isOpen1: !prevState.isOpen1\n      }));\n    };\n\n    this.onSelect2 = event => {\n      this.setState(prevState => ({\n        isOpen2: !prevState.isOpen2\n      }));\n    };\n\n    this.onSelect3 = event => {\n      this.setState(prevState => ({\n        isOpen3: !prevState.isOpen3\n      }));\n    };\n  }\n\n  render() {\n    const toggle = id => {\n      const expanded = this.state.expanded;\n      const index = expanded.indexOf(id);\n      const newExpanded =\n        index >= 0 ? [...expanded.slice(0, index), ...expanded.slice(index + 1, expanded.length)] : [...expanded, id];\n      this.setState(() => ({ expanded: newExpanded }));\n    };\n    return (\n      <DataList aria-label=\"Expandable data list example\">\n        <DataListItem aria-labelledby=\"ex-item1\" isExpanded={this.state.expanded.includes('ex-toggle1')}>\n          <DataListItemRow>\n            <DataListToggle\n              onClick={() => toggle('ex-toggle1')}\n              isExpanded={this.state.expanded.includes('ex-toggle1')}\n              id=\"ex-toggle1\"\n              aria-controls=\"ex-expand1\"\n            />\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell isIcon key=\"icon\">\n                  <CodeBranchIcon />\n                </DataListCell>,\n                <DataListCell key=\"primary content\">\n                  <div id=\"ex-item1\">Primary content</div>\n                  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>\n                  <a href=\"#\">link</a>\n                </DataListCell>,\n                <DataListCell key=\"secondary content\">\n                  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>\n                </DataListCell>,\n                <DataListCell key=\"secondary content 2\">\n                  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>\n                </DataListCell>\n              ]}\n            />\n            <DataListAction aria-labelledby=\"ex-item1 ex-action1\" id=\"ex-action1\" aria-label=\"Actions\" isPlainButtonAction>\n              <Dropdown\n                isPlain\n                position={DropdownPosition.right}\n                isOpen={this.state.isOpen1}\n                onSelect={this.onSelect1}\n                toggle={<KebabToggle onToggle={this.onToggle1} />}\n                dropdownItems={[\n                  <DropdownItem key=\"link\">Link</DropdownItem>,\n                  <DropdownItem key=\"action\" component=\"button\">\n                    Action\n                  </DropdownItem>,\n                  <DropdownItem key=\"disabled link\" isDisabled>\n                    Disabled Link\n                  </DropdownItem>\n                ]}\n              />\n            </DataListAction>\n          </DataListItemRow>\n          <DataListContent\n            aria-label=\"Primary Content Details\"\n            id=\"ex-expand1\"\n            isHidden={!this.state.expanded.includes('ex-toggle1')}\n          >\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et\n              dolore magna aliqua.\n            </p>\n          </DataListContent>\n        </DataListItem>\n        <DataListItem aria-labelledby=\"ex-item2\" isExpanded={this.state.expanded.includes('ex-toggle2')}>\n          <DataListItemRow>\n            <DataListToggle\n              onClick={() => toggle('ex-toggle2')}\n              isExpanded={this.state.expanded.includes('ex-toggle2')}\n              id=\"ex-toggle2\"\n              aria-controls=\"ex-expand2\"\n            />\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell isIcon key=\"icon\">\n                  <CodeBranchIcon />\n                </DataListCell>,\n                <DataListCell key=\"secondary content\">\n                  <div id=\"ex-item2\">Secondary content</div>\n                  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>\n                </DataListCell>,\n                <DataListCell key=\"secondary content 2\">\n                  <span>Lorem ipsum dolor sit amet.</span>\n                </DataListCell>,\n                <DataListCell key=\"secondary content3\">\n                  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>\n                </DataListCell>\n              ]}\n            />\n            <DataListAction aria-labelledby=\"ex-item2 ex-action2\" id=\"ex-action2\" aria-label=\"Actions\" isPlainButtonAction>\n              <Dropdown\n                isPlain\n                position={DropdownPosition.right}\n                isOpen={this.state.isOpen2}\n                onSelect={this.onSelect2}\n                toggle={<KebabToggle onToggle={this.onToggle2} />}\n                dropdownItems={[\n                  <DropdownItem key=\"link\">Link</DropdownItem>,\n                  <DropdownItem key=\"action\" component=\"button\">\n                    Action\n                  </DropdownItem>,\n                  <DropdownItem key=\"disabled link\" isDisabled>\n                    Disabled Link\n                  </DropdownItem>\n                ]}\n              />\n            </DataListAction>\n          </DataListItemRow>\n          <DataListContent\n            aria-label=\"Primary Content Details\"\n            id=\"ex-expand2\"\n            isHidden={!this.state.expanded.includes('ex-toggle2')}\n          >\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et\n              dolore magna aliqua.\n            </p>\n          </DataListContent>\n        </DataListItem>\n        <DataListItem aria-labelledby=\"ex-item3\" isExpanded={this.state.expanded.includes('ex-toggle3')}>\n          <DataListItemRow>\n            <DataListToggle\n              onClick={() => toggle('ex-toggle3')}\n              isExpanded={this.state.expanded.includes('ex-toggle3')}\n              id=\"ex-toggle3\"\n              aria-controls=\"ex-expand3\"\n            />\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell isIcon key=\"icon\">\n                  <CodeBranchIcon />\n                </DataListCell>,\n                <DataListCell key=\"tertiary content\">\n                  <div id=\"ex-item3\">Tertiary content</div>\n                  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>\n                </DataListCell>,\n                <DataListCell key=\"secondary content\">\n                  <span>Lorem ipsum dolor sit amet.</span>\n                </DataListCell>,\n                <DataListCell key=\"secondary content 2\">\n                  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>\n                </DataListCell>\n              ]}\n            />\n            <DataListAction aria-labelledby=\"ex-item3 ex-action3\" id=\"ex-action3\" aria-label=\"Actions\" isPlainButtonAction>\n              <Dropdown\n                isPlain\n                position={DropdownPosition.right}\n                isOpen={this.state.isOpen3}\n                onSelect={this.onSelect3}\n                toggle={<KebabToggle onToggle={this.onToggle3} />}\n                dropdownItems={[\n                  <DropdownItem key=\"link\">Link</DropdownItem>,\n                  <DropdownItem key=\"action\" component=\"button\">\n                    Action\n                  </DropdownItem>,\n                  <DropdownItem key=\"disabled link\" isDisabled>\n                    Disabled Link\n                  </DropdownItem>\n                ]}\n              />\n            </DataListAction>\n          </DataListItemRow>\n          <DataListContent\n            aria-label=\"Primary Content Details\"\n            id=\"ex-expand3\"\n            isHidden={!this.state.expanded.includes('ex-toggle3')}\n            hasNoPadding\n          >\n            This expanded section has no padding.\n          </DataListContent>\n        </DataListItem>\n      </DataList>\n    );\n  }\n}","title":"Expandable","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDataListReactDocs} {...{"code":"import React from 'react';\nimport {\n  Button,\n  DataList,\n  DataListItem,\n  DataListCell,\n  DataListCheck,\n  DataListAction,\n  DataListToggle,\n  DataListContent,\n  DataListItemCells,\n  DataListItemRow,\n  Dropdown,\n  DropdownItem,\n  KebabToggle\n} from '@patternfly/react-core';\n\nclass ModifiersDataList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { show: true, isOpen1: false, isOpen2: false, isOpen3: false };\n\n    this.onToggle1 = isOpen1 => {\n      this.setState({ isOpen1 });\n    };\n\n    this.onToggle2 = isOpen2 => {\n      this.setState({ isOpen2 });\n    };\n\n    this.onSelect1 = event => {\n      this.setState(prevState => ({\n        isOpen1: !prevState.isOpen1\n      }));\n    };\n\n    this.onSelect2 = event => {\n      this.setState(prevState => ({\n        isOpen2: !prevState.isOpen2\n      }));\n    };\n  }\n\n  render() {\n    const previewPlaceholder = {\n      display: 'block',\n      width: '100%',\n      padding: '.25rem .5rem',\n      color: '#004e8a',\n      backgroundColor: '#def3ff',\n      border: '1px solid rgba(0,0,0,.1)',\n      borderRadius: '4px'\n    };\n\n    return [\n      <div key=\"example-1\">\n        <h2>Default fitting - example 1</h2>\n        <DataList aria-label=\"Width modifier data list example 1\">\n          <DataListItem aria-labelledby=\"width-ex1-item1\">\n            <DataListItemRow>\n              <DataListCheck aria-labelledby=\"width-ex1-item1\" name=\"width-ex1-item1\" />\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key=\"default\">\n                    <div style={previewPlaceholder}>\n                      <b id=\"width-ex1-item1\">default</b>\n                      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n                    </div>\n                  </DataListCell>,\n                  <DataListCell key=\"default2\">\n                    <div style={previewPlaceholder}>\n                      <b>default</b>\n                      <p>\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                        labore et dolore magna aliqua.\n                      </p>\n                    </div>\n                  </DataListCell>\n                ]}\n              />\n            </DataListItemRow>\n          </DataListItem>\n        </DataList>\n      </div>,\n      <div key=\"example-2\">\n        <h2>Flex modifiers - example 2</h2>\n        <DataList aria-label=\"Width modifier data list example 2\">\n          <DataListItem aria-labelledby=\"width-ex2-item1\">\n            <DataListItemRow>\n              <DataListCheck aria-labelledby=\"width-ex2-item1\" name=\"width-ex2-item1\" />\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell width={2} key=\"width 2\">\n                    <div style={previewPlaceholder}>\n                      <b id=\"width-ex2-item1\">width 2</b>\n                      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt.</p>\n                    </div>\n                  </DataListCell>,\n                  <DataListCell width={4} key=\"width 4\">\n                    <div style={previewPlaceholder}>\n                      <b>width 4</b>\n                      <p>Lorem ipsum dolor sit amet.</p>\n                    </div>\n                  </DataListCell>\n                ]}\n              />\n              <DataListAction\n                aria-labelledby=\"width-ex2-item1 width-ex2-action1\"\n                id=\"width-ex2-action1\"\n                aria-label=\"Actions\"\n                isPlainButtonAction\n              >\n                <Dropdown\n                  isPlain\n                  position={DropdownPosition.right}\n                  isOpen={this.state.isOpen1}\n                  onSelect={this.onSelect1}\n                  toggle={<KebabToggle onToggle={this.onToggle1} />}\n                  dropdownItems={[\n                    <DropdownItem key=\"link\">Link</DropdownItem>,\n                    <DropdownItem key=\"action\" component=\"button\">\n                      Action\n                    </DropdownItem>,\n                    <DropdownItem key=\"disabled link\" isDisabled>\n                      Disabled Link\n                    </DropdownItem>\n                  ]}\n                />\n              </DataListAction>\n            </DataListItemRow>\n          </DataListItem>\n        </DataList>\n      </div>,\n      <div key=\"example-3\">\n        <h2>Flex modifiers - example 3</h2>\n        <DataList aria-label=\"Width modifier data list example 3\">\n          <DataListItem aria-labelledby=\"width-ex3-item1\" isExpanded={this.state.show}>\n            <DataListItemRow>\n              <DataListToggle\n                isExpanded={this.state.show}\n                id=\"width-ex3-toggle1\"\n                aria-controls=\"width-ex3-expand1\"\n                onClick={() => this.setState({ show: !this.state.show })}\n              />\n              <DataListCheck aria-labelledby=\"width-ex3-item1\" name=\"width-ex3-item1\" />\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell width={5} key=\"width 5\">\n                    <div style={previewPlaceholder}>\n                      <b id=\"width-ex3-item1\">width 5</b>\n                      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n                    </div>\n                  </DataListCell>,\n                  <DataListCell width={2} key=\"width 2\">\n                    <div style={previewPlaceholder}>\n                      <b>width 2</b>\n                      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n                    </div>\n                  </DataListCell>,\n                  <DataListCell key=\"default\">\n                    <div style={previewPlaceholder}>default</div>\n                  </DataListCell>\n                ]}\n              />\n              <DataListAction\n                aria-labelledby=\"width-ex3-item1 width-ex3-action1\"\n                id=\"width-ex3-action1\"\n                aria-label=\"Actions\"\n                isPlainButtonAction\n              >\n                <Dropdown\n                  isPlain\n                  position={DropdownPosition.right}\n                  isOpen={this.state.isOpen2}\n                  onSelect={this.onSelect2}\n                  toggle={<KebabToggle onToggle={this.onToggle2} />}\n                  dropdownItems={[\n                    <DropdownItem key=\"link\">Link</DropdownItem>,\n                    <DropdownItem key=\"action\" component=\"button\">\n                      Action\n                    </DropdownItem>,\n                    <DropdownItem key=\"disabled link\" isDisabled>\n                      Disabled Link\n                    </DropdownItem>\n                  ]}\n                />\n              </DataListAction>\n            </DataListItemRow>\n            <DataListContent aria-label=\"Primary Content Details\" id=\"width-ex3-expand1\" isHidden={!this.state.show}>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua.\n              </p>\n            </DataListContent>\n          </DataListItem>\n        </DataList>\n      </div>\n    ];\n  }\n}","title":"Width modifiers","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDataListReactDocs} {...{"code":"import React from 'react';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  DataList,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListCheck,\n  DataListItemCells,\n  DataListAction\n} from '@patternfly/react-core';\n\nclass SelectableDataList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen1: false,\n      isOpen2: false,\n      selectedDataListItemId: ''\n    };\n\n    this.onToggle1 = isOpen1 => {\n      this.setState({ isOpen1 });\n    };\n\n    this.onToggle2 = isOpen2 => {\n      this.setState({ isOpen2 });\n    };\n\n    this.onSelect1 = event => {\n      this.setState(prevState => ({\n        isOpen1: !prevState.isOpen1\n      }));\n    };\n\n    this.onSelect2 = event => {\n      this.setState(prevState => ({\n        isOpen2: !prevState.isOpen2\n      }));\n    };\n\n    this.onSelectDataListItem = id => {\n      this.setState({ selectedDataListItemId: id });\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <DataList\n          aria-label=\"selectable data list example\"\n          selectedDataListItemId={this.state.selectedDataListItemId}\n          onSelectDataListItem={this.onSelectDataListItem}\n        >\n          {!this.state.isDeleted && (\n            <DataListItem aria-labelledby=\"selectable-action-item1\" id=\"item1\">\n              <DataListItemRow>\n                <DataListItemCells\n                  dataListCells={[\n                    <DataListCell key=\"primary content\">\n                      <span id=\"selectable-action-item1\">Single actionable Primary content</span>\n                    </DataListCell>,\n                    <DataListCell key=\"secondary content\">Single actionable Secondary content</DataListCell>\n                  ]}\n                />\n                <DataListAction\n                  aria-labelledby=\"selectable-action-item1 selectable-action-action1\"\n                  id=\"selectable-action-action1\"\n                  aria-label=\"Actions\"\n                  isPlainButtonAction\n                >\n                  <Dropdown\n                    isPlain\n                    position={DropdownPosition.right}\n                    isOpen={this.state.isOpen1}\n                    onSelect={this.onSelect1}\n                    toggle={<KebabToggle onToggle={this.onToggle1} />}\n                    dropdownItems={[\n                      <DropdownItem key=\"link\">Link</DropdownItem>,\n                      <DropdownItem key=\"action\" component=\"button\">\n                        Action\n                      </DropdownItem>,\n                      <DropdownItem key=\"disabled link\" isDisabled>\n                        Disabled Link\n                      </DropdownItem>\n                    ]}\n                  />\n                </DataListAction>\n              </DataListItemRow>\n            </DataListItem>\n          )}\n          <DataListItem aria-labelledby=\"selectable-actions-item2\" id=\"item2\">\n            <DataListItemRow>\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key=\"primary content\">\n                    <span id=\"selectable-actions-item2\">Selectable actions Primary content</span>\n                  </DataListCell>,\n                  <DataListCell key=\"secondary content\">Selectable actions Secondary content</DataListCell>\n                ]}\n              />\n              <DataListAction\n                aria-labelledby=\"selectable-actions-item2 selectable-actions-action2\"\n                id=\"selectable-actions-action2\"\n                aria-label=\"Actions\"\n                isPlainButtonAction\n              >\n                <Dropdown\n                  isPlain\n                  position={DropdownPosition.right}\n                  isOpen={this.state.isOpen2}\n                  onSelect={this.onSelect2}\n                  toggle={<KebabToggle onToggle={this.onToggle2} />}\n                  dropdownItems={[\n                    <DropdownItem key=\"link\">Link</DropdownItem>,\n                    <DropdownItem key=\"action\" component=\"button\">\n                      Action\n                    </DropdownItem>,\n                    <DropdownItem key=\"disabled link\" isDisabled>\n                      Disabled Link\n                    </DropdownItem>\n                  ]}\n                />\n              </DataListAction>\n            </DataListItemRow>\n          </DataListItem>\n        </DataList>\n      </React.Fragment>\n    );\n  }\n}","title":"Selectable rows","lang":"js"}}>
    </Example>
  </React.Fragment>
);
DocumentationComponentsDataListReactDocs.Component.displayName = 'DocumentationComponentsDataListReactDocs';
