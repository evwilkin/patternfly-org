import React from 'react';
import { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';
import { ThIcon, CaretDownIcon, CogIcon, BellIcon, CubesIcon, UserIcon } from '@patternfly/react-icons';
import { Link } from '@reach/router';
import avatarImg from '../../../../../../../node_modules/@patternfly/react-core/src/components/Dropdown/examples/../../Avatar/examples/avatarImg.svg';

export const DocumentationComponentsDropdownReactDocs = {
  "slug": "/documentation/components/dropdown/react",
  "source": "react",
  "propComponents": [
    "Dropdown",
    "DropdownGroup",
    "DropdownItem",
    "DropdownToggle",
    "DropdownToggleCheckbox",
    "DropdownToggleAction"
  ],
  "sourceLink": "https://github.com/patternfly/patternfly-react/blob/master/packages/react-core/src/components/Dropdown/examples/Dropdown.md",
  "section": "components",
  "id": "Dropdown",
  "title": "Dropdown",
  "toc": [
    "Examples"
  ],
  "cssPrefix": "pf-c-dropdown"
};
DocumentationComponentsDropdownReactDocs.liveContext = {
  ThIcon,
  CaretDownIcon,
  CogIcon,
  BellIcon,
  CubesIcon,
  UserIcon,
  Link,
  avatarImg
};
DocumentationComponentsDropdownReactDocs.Component = () => (
  <React.Fragment>
    <AutoLinkHeader {...{"size":"h2","className":"ws-title ws-h2"}}>
      {`Examples`}
    </AutoLinkHeader>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon, CaretDownIcon } from '@patternfly/react-icons';\n\nclass SimpleDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle id=\"toggle-id\" onToggle={this.onToggle} toggleIndicator={CaretDownIcon}>\n            Dropdown\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Basic","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass IntialSelectionDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-1');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\" autoFocus>\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle id=\"toggle-id-1\" onToggle={this.onToggle}>\n            Dropdown\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n        autoFocus={false}\n      />\n    );\n  }\n}","title":"With initial selection","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownGroup, DropdownItem, DropdownSeparator } from '@patternfly/react-core';\n\nclass GroupedDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-3');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownGroup key=\"group 1\">\n        <DropdownItem key=\"group 1 link\">Link</DropdownItem>\n        <DropdownItem key=\"group 1 action\" component=\"button\">\n          Action\n        </DropdownItem>\n      </DropdownGroup>,\n      <DropdownGroup label=\"Group 2\" key=\"group 2\">\n        <DropdownItem key=\"group 2 link\">Group 2 Link</DropdownItem>\n        <DropdownItem key=\"group 2 action\" component=\"button\">\n          Group 2 Action\n        </DropdownItem>\n      </DropdownGroup>,\n      <DropdownGroup label=\"Group 3\" key=\"group 3\">\n        <DropdownItem key=\"group 3 link\">Group 3 Link</DropdownItem>\n        <DropdownItem key=\"group 3 action\" component=\"button\">\n          Group 3 Action\n        </DropdownItem>\n      </DropdownGroup>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle} id=\"toggle-id-3\">\n            Dropdown\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n        isGrouped\n      />\n    );\n  }\n}","title":"With groups","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass DisabledDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle isDisabled onToggle={this.onToggle}>\n            Dropdown\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Disabled","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection\n} from '@patternfly/react-core';\nimport { ThIcon, CaretDownIcon } from '@patternfly/react-icons';\n\nclass PrimaryDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-4');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle} toggleIndicator={CaretDownIcon} isPrimary id=\"toggle-id-4\">\n            Dropdown\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Primary toggle","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass PositionRightDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-5');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        position={DropdownPosition.right}\n        toggle={<DropdownToggle onToggle={this.onToggle}>Dropdown</DropdownToggle>}\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Position right","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass DirectionUpDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        direction={DropdownDirection.up}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle} id=\"toggle-id-5\">\n            Dropdown\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Direction up","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass KebabDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-6');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={<KebabToggle onToggle={this.onToggle} id=\"toggle-id-6\" />}\n        isOpen={isOpen}\n        isPlain\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"With kebab","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass IconDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-7');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle toggleIndicator={null} onToggle={this.onToggle} aria-label=\"Applications\" id=\"toggle-id-7\">\n            <ThIcon />\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        isPlain\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Icon only","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass SplitButtonDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-8');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox id=\"example-checkbox-1\" key=\"split-checkbox\" aria-label=\"Select all\" />\n            ]}\n            onToggle={this.onToggle}\n            id=\"toggle-id-8\"\n          />\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Split button","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass SplitButtonDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox id=\"example-checkbox-2\" key=\"split-checkbox\" aria-label=\"Select all\">\n                10 selected\n              </DropdownToggleCheckbox>\n            ]}\n            onToggle={this.onToggle}\n          />\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Split button (with text)","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\nclass SplitButtonDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      isChecked: null\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n    this.onChange = isChecked => {\n      this.setState({\n        isChecked\n      });\n    };\n  }\n  render() {\n    const { isOpen, isChecked } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id=\"example-checkbox-3rd-state\"\n                key=\"split-checkbox\"\n                aria-label=\"Select all\"\n                onChange={checked => this.onChange(checked)}\n                isChecked={isChecked}\n              />\n            ]}\n            onToggle={this.onToggle}\n          />\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Split button (3rd state)","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass SplitButtonDisabledDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id=\"example-checkbox-3\"\n                key=\"disabled-checkbox\"\n                aria-label=\"Select all\"\n                isDisabled\n              />\n            ]}\n            isDisabled\n            onToggle={this.onToggle}\n          />\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Split button (disabled)","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownToggleAction,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon, CogIcon, BellIcon, CubesIcon } from '@patternfly/react-icons';\n\nclass SplitButtonActionDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActionOpen: false,\n      isCogOpen: false\n    };\n    this.onActionToggle = isActionOpen => {\n      this.setState({\n        isActionOpen\n      });\n    };\n    this.onCogToggle = isCogOpen => {\n      this.setState({\n        isCogOpen\n      });\n    };\n    this.onActionClick = event => {\n      window.alert('You selected an action button!');\n    };\n    this.onCogClick = event => {\n      window.alert('You selected the Cog!');\n    };\n    this.onActionSelect = event => {\n      this.setState({\n        isActionOpen: !this.state.isActionOpen\n      });\n    };\n    this.onCogSelect = event => {\n      this.setState({\n        isCogOpen: !this.state.isCogOpen\n      });\n    };\n  }\n\n  render() {\n    const { isActionOpen, isCogOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"action\" component=\"button\" onClick={this.onActionClick}>\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" component=\"button\" isDisabled onClick={this.onActionClick}>\n        Disabled action\n      </DropdownItem>,\n      <DropdownItem key=\"other action\" component=\"button\" onClick={this.onActionClick}>\n        Other action\n      </DropdownItem>\n    ];\n    const dropdownIconItems = [\n      <DropdownItem key=\"action\" component=\"button\" icon={<CogIcon />} onClick={this.onActionClick}>\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" component=\"button\" icon={<BellIcon />} isDisabled onClick={this.onActionClick}>\n        Disabled action\n      </DropdownItem>,\n      <DropdownItem key=\"other action\" component=\"button\" icon={<CubesIcon />} onClick={this.onActionClick}>\n        Other action\n      </DropdownItem>\n    ];\n    return (\n      <React.Fragment>\n        <Dropdown\n          onSelect={this.onActionSelect}\n          toggle={\n            <DropdownToggle\n              splitButtonItems={[\n                <DropdownToggleAction key=\"action\" onClick={this.onActionClick}>\n                  Action\n                </DropdownToggleAction>\n              ]}\n              splitButtonVariant=\"action\"\n              onToggle={this.onActionToggle}\n            />\n          }\n          isOpen={isActionOpen}\n          dropdownItems={dropdownItems}\n        />{' '}\n        <Dropdown\n          onSelect={this.onCogSelect}\n          toggle={\n            <DropdownToggle\n              splitButtonItems={[\n                <DropdownToggleAction key=\"cog-action\" aria-label=\"Action\" onClick={this.onCogClick}>\n                  <CogIcon />\n                </DropdownToggleAction>\n              ]}\n              splitButtonVariant=\"action\"\n              onToggle={this.onCogToggle}\n            />\n          }\n          isOpen={isCogOpen}\n          dropdownItems={dropdownIconItems}\n        />\n      </React.Fragment>\n    );\n  }\n}","title":"Split button action","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon } from '@patternfly/react-icons';\n\nclass DropdownPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={<DropdownToggle onToggle={this.onToggle}>Expanded Dropdown</DropdownToggle>}\n        isOpen={isOpen}\n      >\n        [Panel contents here]\n      </Dropdown>\n    );\n  }\n}","title":"Basic panel","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Button,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { Link } from '@reach/router';\nimport { ThIcon, CaretDownIcon } from '@patternfly/react-icons';\n\nclass RouterDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-8');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"routerlink\" component={\n        <Link to=\"/\">\n          @reach/router Link\n        </Link>\n      } />\n    ];\n\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle id=\"toggle-id-8\" onToggle={this.onToggle} toggleIndicator={CaretDownIcon}>\n            Dropdown\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Router link","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Avatar,\n  Dropdown,\n  DropdownGroup,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator\n} from '@patternfly/react-core';\nimport avatarImg from '../../Avatar/examples/avatarImg.svg';\n\nclass ImageTextDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-9');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownGroup key=\"group 1\">\n        <DropdownItem key=\"group 1 plaintext\" component=\"div\" isPlainText>Text</DropdownItem>\n        <DropdownItem key=\"group 1 plaintext2\" component=\"div\" isPlainText>More text</DropdownItem>\n      </DropdownGroup>,\n      <DropdownSeparator key=\"dropdown separator\" />,\n      <DropdownGroup key=\"group 2\">\n        <DropdownItem key=\"group 2 profile\">My profile</DropdownItem>\n        <DropdownItem key=\"group 2 user\" component=\"button\">\n          User management\n        </DropdownItem>\n        <DropdownItem key=\"group 2 logout\">Logout</DropdownItem>\n      </DropdownGroup>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle\n            id=\"toggle-id-9\"\n            onToggle={this.onToggle}\n            toggleIndicator={CaretDownIcon}\n            icon={<Avatar src={avatarImg} alt=\"avatar\"></Avatar>}\n          >\n            Ned Username\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Dropdown with image and text","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { ThIcon, CaretDownIcon } from '@patternfly/react-icons';\n\nclass MenuOnDocumentBodyDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id-menu-document-body');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem key=\"link\">1</DropdownItem>\n    ];\n    return (\n      <div style={{ height: '50px', overflow: 'hidden' }}>\n        <Dropdown\n          onSelect={this.onSelect}\n          toggle={\n            <DropdownToggle id=\"toggle-id-menu-document-body\" onToggle={this.onToggle} toggleIndicator={CaretDownIcon}>\n              Dropdown\n            </DropdownToggle>\n          }\n          isOpen={isOpen}\n          dropdownItems={dropdownItems}\n          menuAppendTo={() => document.body}\n        />\n      </div>\n    );\n  }\n}","title":"Append menu document body","lang":"js"}}>
    </Example>
    <Example {...DocumentationComponentsDropdownReactDocs} {...{"code":"import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle\n} from '@patternfly/react-core';\nimport { BellIcon, CaretDownIcon, CubesIcon } from '@patternfly/react-icons';\n\nclass SimpleDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n    this.onSelect = event => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      this.onFocus();\n    };\n    this.onFocus = () => {\n      const element = document.getElementById('toggle-id');\n      element.focus();\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n        \n    const dropdownItems = [\n      <DropdownItem key=\"link\" description=\"This is a description\" icon={<CubesIcon />}>Link</DropdownItem>,\n      <DropdownItem \n        key=\"action\" \n        component=\"button\" \n        icon={<BellIcon />}\n        description=\"This is a very long description that describes the menu item\"\n      >\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled description=\"Disabled link description\">\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\" description=\"This is a description\">\n        Disabled Action\n      </DropdownItem>\n    ];\n    return (\n      <Dropdown\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle id=\"toggle-id\" onToggle={this.onToggle} toggleIndicator={CaretDownIcon}>\n            Dropdown\n          </DropdownToggle>\n        }\n        isOpen={isOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}","title":"Dropdown with descriptions","lang":"js"}}>
    </Example>
  </React.Fragment>
);
DocumentationComponentsDropdownReactDocs.Component.displayName = 'DocumentationComponentsDropdownReactDocs';
